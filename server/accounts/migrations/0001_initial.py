# Generated by Django 5.1.2 on 2024-10-21 07:36

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('schools', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department_code', models.CharField(max_length=32, unique=True)),
                ('department_name', models.CharField(max_length=64)),
            ],
            options={
                'ordering': ['department_name'],
            },
        ),
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('standard', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('12', '12')], max_length=2)),
                ('division', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J')], max_length=1)),
            ],
            options={
                'ordering': ['standard', 'division'],
                'indexes': [models.Index(fields=['standard'], name='accounts_cl_standar_afb1a9_idx'), models.Index(fields=['standard', 'division'], name='accounts_cl_standar_58f6ff_idx')],
                'unique_together': {('standard', 'division')},
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_id', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('first_name', models.CharField(max_length=255)),
                ('middle_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255)),
                ('user_type', models.CharField(choices=[('teacher', 'Teacher'), ('student', 'Student')], default='student', max_length=8)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='schools.school')),
            ],
            options={
                'ordering': ['first_name', 'last_name'],
            },
        ),
        migrations.CreateModel(
            name='TeacherDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_teacher_of', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='class_teacher_of', to='accounts.classroom')),
                ('departments', models.ManyToManyField(related_name='departments', to='accounts.department')),
                ('subject_teacher_of', models.ManyToManyField(related_name='subject_teacher_of', to='accounts.classroom')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_details', to='accounts.user')),
            ],
            options={
                'verbose_name': 'Teacher Detail',
                'verbose_name_plural': 'Teacher Details',
            },
        ),
        migrations.CreateModel(
            name='StudentDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.classroom')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student_details', to='accounts.user')),
            ],
            options={
                'verbose_name': 'Student Detail',
                'verbose_name_plural': 'Student Details',
            },
        ),
        migrations.CreateModel(
            name='UserContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_type', models.CharField(choices=[('email', 'Email'), ('phone_number', 'Phone Number')], max_length=14)),
                ('contact_data', models.CharField(max_length=255)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='accounts.user')),
            ],
            options={
                'verbose_name': 'User Contact',
                'verbose_name_plural': 'User Contacts',
            },
        ),
        migrations.CreateModel(
            name='UserDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_token', models.CharField(max_length=255, unique=True)),
                ('device_type', models.CharField(choices=[('android', 'Android'), ('ios', 'iOS'), ('web', 'Web')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('logged_in_through', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registered_on', to='accounts.usercontact')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices', to='accounts.user')),
            ],
            options={
                'verbose_name': 'User Device',
                'verbose_name_plural': 'User Devices',
            },
        ),
        migrations.AddIndex(
            model_name='usercontact',
            index=models.Index(fields=['contact_type', 'contact_data'], name='accounts_us_contact_8e4912_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='usercontact',
            unique_together={('user', 'contact_type', 'contact_data')},
        ),
        migrations.AlterUniqueTogether(
            name='userdevice',
            unique_together={('user', 'device_token')},
        ),
    ]
